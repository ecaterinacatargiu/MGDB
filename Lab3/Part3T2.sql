USE GradesDatabase
go


--- DIRTY READS
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
BEGIN TRAN
SELECT * FROM Students
WAITFOR DELAY '00:00:15'
SELECT * FROM Students
COMMIT TRAN

-- solution
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
BEGIN TRAN
SELECT * FROM Students
WAITFOR DELAY '00:00:15'
SELECT * FROM Students
COMMIT TRAN


--- NON-REPEATABLE READS
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
BEGIN TRAN
SELECT * FROM Students
WAITFOR DELAY '00:00:15'
SELECT * FROM Students
COMMIT TRAN

-- solution
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ
BEGIN TRAN
SELECT * FROM Students
WAITFOR DELAY '00:00:15'
SELECT * FROM Students
COMMIT TRAN


--- PHANTOM READS
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ
BEGIN TRAN
SELECT * FROM Course
WAITFOR DELAY '00:00:15'
SELECT * FROM Course
COMMIT TRAN

-- solution
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRAN
SELECT * FROM Students
WAITFOR DELAY '00:00:15'
SELECT * FROM Students
COMMIT TRAN

--- DEADLOCK
BEGIN TRANSACTION
UPDATE Course SET courseName='newName1' WHERE courseID=2
WAITFOR DELAY '00:00:10'
UPDATE Course SET courseName='newName2' WHERE courseID=3
COMMIT TRAN

-- solution
--- decide an order and stick to it
BEGIN TRANSACTION
UPDATE Course SET courseName='newName1' WHERE courseID=2
WAITFOR DELAY '00:00:10'
UPDATE Course SET courseName='newName2' WHERE courseID=3
COMMIT TRAN

-- OOOOR deadlock priority
SET DEADLOCK_PRIORITY HIGH
BEGIN TRANSACTION
UPDATE Course SET courseName='newName1' WHERE courseID=2
WAITFOR DELAY '00:00:10'
UPDATE Course SET courseName='newName2' WHERE courseID=3
COMMIT TRAN


SELECT * FROM Course